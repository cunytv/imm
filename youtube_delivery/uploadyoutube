#!/bin/bash
# upload to YOUTUBE
requireconfig="Y"

version="1.1"
UPLOADREGEX="^PR|^AALE|^AALF|^AITC|^BLAM|^BLTV|^BTBL|^BTNY|^BUNY|^CANA|^CFOR|^CITA|^CIWI|^CLIR|^CNJZ|^DANI|^DIGA|^DREAM|^DVCT|^ELCO|^INSO|^IRWR|^ISLG|^ITAL|^LTNS|^LTRP|^NUEV|^NYTCU|^OPED|^OPEN|^OTOO|^PATC|^PTSBL|^SCIU|^SHUS|^SMRB|^SMSC|^SPEC|^SPLT|^STRP|^THMP|^THTK|^TKHL|^TKMV|^TNGD|^TWTT|^TEST|^TPNR|^URBN|^WW"
scriptdir=$(dirname "$0")
. "$scriptdir/mmfunctions" || { echo "Missing '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

usage(){
    echo
    echo "$(basename ${0}) ${version}"
    echo "This application will upload file(s) to a server via rsync in sequential order. Options are specified via 'mmconfig'."
    echo
    echo "Usage: $(basename $0) file1 [ file2 ...]"
    echo "  -f ( force the upload without the regex pattern test )"
    echo "  -h ( display this help )"
    echo
    exit
}
[ "$#" = 0 ] && usage

cleanup(){
    _log -a "Process aborted"
    exit 1
}

trap cleanup SIGHUP SIGINT SIGTERM
_log -b

MOUNT_YOUTUBE=/tmp/youtube_upload/
if [[ ! -d "${MOUNT_YOUTUBE}" ]] ; then
	mkdir "${MOUNT_YOUTUBE}"
fi
mount_afp afp://archivesx:cunytvx@cunytv/From%20library/youtube_delivery "${MOUNT_YOUTUBE}"

# command-line options to set mediaid and original variables
OPTIND=1
while getopts ":hf" opt; do
    case "$opt" in
        h) usage ;;
        f) FORCE="y" ;;
        *) echo "Invalid option: -$OPTARG" ; exit 1 ;;
        :) echo "Option -$OPTARG requires an argument" ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))
while [ "$*" != "" ] ; do
    sourcefile="$1"
    removetmp="n"
    filename=$(basename "$sourcefile")
    if [ "$(echo "$filename" | grep -E "${UPLOADREGEX}")" -o "${FORCE}" = "y" ] ; then
        _report -dt "${filename} qualifies for youtube upload."
        _report -dt "Starting to rsync $filename to ${MOUNT_YOUTUBE}..."
        rsync -rtvP "$sourcefile" "${MOUNT_YOUTUBE}/"
        upload_err="${?}"
        if [ "$upload_err" = "0" ] ; then
            _report -dt "${filename} is uploaded to the ${MOUNT_YOUTUBE}"
        else
            _report -wt "rsync exited with code ${upload_err} for ${filename}."
        fi
    else
        _report -dt "${filename} does NOT qualify for youtube upload, skipping."
    fi
    shift
done
umount "${MOUNT_YOUTUBE}"
_log -e
