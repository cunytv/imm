#!/bin/bash

# This script is intended to scan a folder for newly uploaded files and then 
# upload those files to youtube automatically.

LOCK="/tmp/$(basename "${0}").lock"

YOUTUBEUPLOADER="/Users/cunytvadmin/go/bin/youtubeuploader"
YOUTUBECACHE="/Users/cunytvadmin/go/bin/request.token"

dir="/Volumes/From library/youtube_delivery"
donedir="${dir}/Uploaded"
dupdir="${dir}/Duplicates"
errordir="${dir}/Errors"
logDir="/Users/cunytvadmin"
ytErr="/tmp/youtube-upload2.stderr"

logit(){
  MSG="${1}"
  WHEN="$(date +%FT%T)"
  logFile="${logDir}/ftpscan.log"
  echo "${WHEN}: ${MSG}" >> "$logFile"
}

if [[ -f "$LOCK" ]] ; then
  echo "$0 is already running, remove the $LOCK file is you need to reset"
else
  touch "$LOCK"
  # Get the current file list from the directory
  find "${dir}" -type f -name "*.mp4" -maxdepth 1 -mindepth 1 | while read file ; do
  echo "Trying to upload ${file} to youtube"
  FILE_NAME="$(basename "${file}")"
  if [[ "${FILE_NAME:0:3}" == "WPR" ]] ; then
      PRIVACY_TYPE="unlisted"
  else
      PRIVACY_TYPE="private"
  fi
  # --credentials-file="${logDir}/.youtube-upload-credentials.json"
  YOUTUBE_ID="$("${YOUTUBEUPLOADER}" -secrets="${logDir}/client_secrets.json" -cache "${YOUTUBECACHE}" -title "$(basename "${file%.*}")" -privacy "${PRIVACY_TYPE}" -filename "${file}" 2>$ytErr | grep -i "success" | awk 'NF>1{print $NF}')"
  echo "Outcome of uploading ${file} is ${YOUTUBE_ID}."
  if [[ "${#YOUTUBE_ID}" == 11 ]] ; then
    mv -v "${file}" "${donedir}"
    logit "${FILE_NAME} is uploaded, (${YOUTUBE_ID})."
  else
    mv -v "${file}" "${errordir}"
    logit "${FILE_NAME} had an error, see ${errordir}.stderr.txt."
    cat "${ytErr}" >> "${errordir}/errors.stderr.txt"
  fi
  done
  if [[ -f "$LOCK" ]] ; then
	rm "$LOCK"
  fi
fi
