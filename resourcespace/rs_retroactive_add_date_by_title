<?php

// global vars
// fixed
$private_key = "61f7477d9cdad97ad99295ca7a2de2967172f866f1b21e1ee83ee570da999e87";
$user = "admin";
$url = "http://resourcespace/api/";


// Get field options
function get_resource_field_data($r) {
    global $private_key, $user, $url;

    $params = [
        "user"    => $user,
        "function"=> "get_resource_data",
        "resource"  => $r
    ];

    $query = http_build_query($params);
    $sign = hash("sha256", $private_key . $query);

    // Retry loop
    $maxRetries = 3;
    $attempt = 0;

    while ($attempt < $maxRetries) {
        $attempt++;
        $response = file_get_contents("http://resourcespace/api/?" . $query . "&sign=" . $sign);
        $http_code = '';

        if (isset($http_response_header)) {
            $status_line = $http_response_header[0];
            preg_match('{HTTP\/\S*\s(\d{3})}', $status_line, $match);
            $http_code = $match[1] ?? null;

            if ($http_code == '200') { // Success
                return $response;
            } else {
                echo "Attempt #$attempt failed.\n";
                echo "Response Body: ";
                print_r($response);
                sleep(1); // Wait before retrying
            }
        }
    }

}


// useful only for After_update_resource hook
function get_title($r) {
    $data = get_resource_field_data($r);
	$data = json_decode($data, true);
	
	$title = null;

	if (isset($data['field8'])) {
	        $title = $data['field8'];
	 }
    
    return $title;
}

function extractDateFromString($string) {
    
	// Match YYYYMMDD
    preg_match_all('/\d{8}/', $string, $matches8);
	
    foreach ($matches8[0] as $match) {
        // Validate date format
        $year = (int)substr($match, 0, 4);
        $month = (int)substr($match, 4, 2);
        $day = (int)substr($match, 6, 2);
		
        if ($year >= 1985 && $year <= 2084 && checkdate((int)$month, (int)$day, (int)$year)) {
			$formatted = sprintf('%04d-%02d-%02d', $year, $month, $day);
            return "$formatted";
        }
    }
	
	// Match YYMMDD
	preg_match_all('/\d{6}/', $string, $matches6);
    foreach ($matches6[0] as $match) {
        // Validate date format
        $year = (int)substr($match, 0, 2);
        $month = (int)substr($match, 2, 2);
        $day = (int)substr($match, 4, 2);
		
		$year += ($year >= 85) ? 1900 : 2000;
		
        if ($year >= 1900 && $year <= 2100 && checkdate((int)$month, (int)$day, (int)$year)) {
			$formatted = sprintf('%04d-%02d-%02d', $year, $month, $day);
            return "$formatted";
        }
    }
	
	// Match YYYY-MM-DD
	preg_match_all('/\d{4}-\d{2}-\d{2}/', $string, $matchesIso);
	    foreach ($matchesIso[0] as $match) {
	        [$year, $month, $day] = explode('-', $match);
	        $year = (int)$year;
	        $month = (int)$month;
	        $day = (int)$day;

	        if ($year >= 1900 && $year <= 2100 && checkdate($month, $day, $year)) {
				$formatted = sprintf('%04d-%02d-%02d', $year, $month, $day);
	            return "$formatted";
			}
		}

    return null; // No valid date found
}

function set_date($r, $d){
	global $private_key, $user, $url;
	
	if (is_null($d)) {
	        return; // exit the function if $date is null
	    }
	
	echo "Date: " . $d . PHP_EOL;
	$data = [
		    'user' => $user,
		    'function' => 'update_field',
		    'resource' => $r,
			'field' => 12, // type field ID for Date
			'value' => $d,
		];

	$query = http_build_query($data);
	$sign = hash("sha256", $private_key . $query);
	$data['sign'] = $sign;

	$postdata = array();
	$postdata['query'] = http_build_query($data);
	$postdata['sign'] = $sign;
	$postdata['user'] = $user;

	$curl = curl_init($url);
	curl_setopt( $curl, CURLOPT_HEADER, "Content-Type:application/x-www-form-urlencoded" );
	curl_setopt( $curl, CURLOPT_POST, 1);
	curl_setopt( $curl, CURLOPT_POSTFIELDS, $postdata);
	curl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1 );

	$curl_response = curl_exec($curl);
	$curl_error = curl_error($curl);

	print_r($curl_error);
	//print_r($curl_response);
	
}

for ($rid = 1; $rid <= 10214; $rid++) {
    $title = get_title($rid);

    if ($title !== null) {
        echo "Resource: " . $rid . PHP_EOL;
        echo "Title: " . $title . PHP_EOL;

        $date = extractDateFromString($title);

        if ($date !== null) {
            set_date($rid, $date);
            echo "Date set: " . $date . PHP_EOL;
        }

        echo "---" . PHP_EOL;
    }
}
