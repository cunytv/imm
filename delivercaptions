#!/bin/bash
VERSION="1.0"
SCRIPTDIR=$(dirname $(which "${0}"))
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};

DELIVERY_DIRECTORY="/Volumes/XsanFileserver2/CUNY TV files/To web and social media"
SCC_DIRECTORY="/Volumes/fs0/cunytv.dir/subtitle.dir"

_checkdir "${DELIVERY_DIRECTORY}"
_checkdir "${SCC_DIRECTORY}"

find "${DELIVERY_DIRECTORY}" -name "*.mp4" | sort | while read file ; do
    unset MIDDLE_OPTIONS
    DELIVERY_DIRECTORY="/Volumes/XsanFileserver2/CUNY TV files/To web and social media/test4"
    if [[ ! -d "${DELIVERY_DIRECTORY}" ]] ; then
        mkdir "${DELIVERY_DIRECTORY}"
    fi
    BASENAME="$(basename "${file}")"
    COMMENT="$(ffprobe -v 0 -i "${file}" -show_entries format_tags=comment -of default=nw=1:nk=1)"
    if [[ -n "${COMMENT}" ]] ; then
        EMBEDDED_MEDIAID="$(echo "${COMMENT}" | grep -o "mediaid=[0-9.]*" | cut -d= -f2)"
        if [[ -n "${EMBEDDED_MEDIAID}" ]] ; then
            _report -d "Using an embedded mediaid: ${EMBEDDED_MEDIAID}"
            MEDIAID="${EMBEDDED_MEDIAID}"
        fi
        INTIME="$(echo "${COMMENT}" | grep -o "in=[0-9:.]*" | cut -d= -f2)"
        OUTTIME="$(echo "${COMMENT}" | grep -o "out=[0-9:.]*" | cut -d= -f2)"
        _report -d "${BASENAME} is a chapter file with this timing ($INTIME - $OUTTIME) of ${MEDIAID}"
        if [[ -n "${INTIME}" ]]; then
            MIDDLE_OPTIONS+=(-ss "${INTIME}")
        fi
        if [[ -n "${OUTTIME}" ]] ; then
            MIDDLE_OPTIONS+=(-to "$OUTTIME")
        fi
    else
        MEDIAID="$(echo ${BASENAME%.*} | sed 's|_SEG[0-9]{2}.*||g')"
    fi
    _report -q -n "Found ${BASENAME} (${MEDIAID})"
    HOPEFUL_SCC="${SCC_DIRECTORY}/${MEDIAID}.scc"
    HOPEFUL_BASE_SRT="${DELIVERY_DIRECTORY}/${MEDIAID}.en_US.srt"
    HOPEFUL_SRT="${DELIVERY_DIRECTORY}/${BASENAME%.*}.en_US.srt"
    if [[ -n "${MIDDLE_OPTIONS[@]}" ]] ; then
        CAPTION_INPUT="${HOPEFUL_BASE_SRT}"
        echo "GOING TO GET captions for $file from the episode srt at ${HOPEFUL_SRT}"
    else
        CAPTION_INPUT="${HOPEFUL_SCC}"
    fi
    if [[ -f "${HOPEFUL_SRT}" ]] ; then
        _report -q "and $(basename "${HOPEFUL_SRT}") is already there."
    elif [[ -f "${HOPEFUL_SCC}" ]] ; then
        _report -d "and $(basename ${HOPEFUL_SCC}) exists, so going to add an srt from that."
        ffmpeg -nostdin -hide_banner -loglevel 24 -i "${CAPTION_INPUT}" "${MIDDLE_OPTIONS[@]}" -f srt - | sed 's|<font face="Monospace">{\\an7}||g;s|</font>||g;s|\\h||g' > "${HOPEFUL_SRT}"
    else
        _report -w "and there's nothing i can do about that since ${HOPEFUL_SCC} isn't ready."
    fi
done
