#!/bin/bash
scriptdir=$(dirname "$0")
. "$scriptdir/mmfunctions" || { echo "Missing '$scriptdir/mmfunctions'. Exiting." ; exit 1 ;};

## local variables
# declare an age in days under which files will be excluded from being removal candidates
keepnewforXdays=5
# array of about-to-runs
abouttoruns=(/Volumes/Autosaved/02-LIFE.xml /Volumes/Autosaved/03-GOV.xml /Volumes/Autosaved/04-WORLD.xml)

# shortcuts
AGED_DATE=$(date -v-${keepnewforXdays}d '+%F')
TODAY=$(date '+%F')

##inputs
NYCMG_MEDIAID_CSV="$HOME/Desktop/REPORTS/NYCLIFE01011980.csv"           # protrack csv export from NYCMG
CUNY_PROTRACK_REPORT_DIR="/Volumes/XsanFileserver2/CUNY TV files/From library/schedules/"              # directory where cunytv protrack database reports to
CUNYTV_TOAIRALL="${CUNY_PROTRACK_REPORT_DIR}/cunytvto_air_all.txt"
CUNYTV_TOAIR="${CUNY_PROTRACK_REPORT_DIR}/cunytvto_air.txt"
CUNY_FILLERS="${CUNY_PROTRACK_REPORT_DIR}/all_ids_filler.txt"
CUNY_PROGRAMS="${CUNY_PROTRACK_REPORT_DIR}/all_ids_program.txt"
CUNY_SEGMENTS="${CUNY_PROTRACK_REPORT_DIR}/all_ids_segments.txt"
NYCMG_NEARLINE_PATH="/Volumes/NYCM_Media"
CUNYTV_DIGACQ_PATH="/Volumes/CUNYTV_Media/digital_acquisitions"
OMNEON_PATH="/Volumes/fs0/clip.dir"

#outputs
REPORTDIR="$HOME/Desktop/REPORTS/$TODAY"
NYCMG_ABOUT_TO_RUN_DIR="${REPORTDIR}/nycmg-about-to-runs"
IDS_NYCMG="$REPORTDIR/all_protrack_ids_nycmg.txt"
IDS_CUNYTV="$REPORTDIR/all_protrack_ids_cunytv.txt"
IDS_BOTH="$REPORTDIR/all_protrack_ids_cunytv_and_nycmg.txt"
ON_OMNEON_FILES_STAT="$REPORTDIR/what_is_on_the_omneon_stat.txt"
ON_OMNEON_IDS="$REPORTDIR/what_is_on_the_omneon_ids_only.txt"
ON_OMNEON_IDS_OLD="$REPORTDIR/what_is_on_the_omneon_and_old_ids_only.txt"
NYCMG4AIR="$REPORTDIR/nycmg_ids_in_upcoming_air.txt"
CUNYTV4AIR="$REPORTDIR/cunytv_ids_in_upcoming_air.txt"
NYCMG_FILLER_IDS="$REPORTDIR/nycmg_ids_of_filler.txt"
CUNYTV_FILLER_IDS="$REPORTDIR/cunytv_ids_of_filler.txt"
ORPHANS="$REPORTDIR/orphans.txt"
ORPHANPATHS="$REPORTDIR/orphans_fullpath.txt"
ORPHANSDETAIL="$REPORTDIR/orphans_details.csv"
CONFLICTS="$REPORTDIR/conflicts.txt"
NYCMG_ON_OMNEON="$REPORTDIR/what_is_on_the_omneon_ids_only_nycmg_only.txt"
CUNYTV_ON_OMNEON="$REPORTDIR/what_is_on_the_omneon_ids_only_cunytv_only.txt"
NYCMG_ON_OMNEON_NOT_FILLER="$REPORTDIR/what_is_on_the_omneon_ids_only_nycmg_only_not_filler.txt"
CUNYTV_ON_OMNEON_NOT_FILLER="$REPORTDIR/what_is_on_the_omneon_ids_only_cunytv_only_not_filler.txt"
NYCMG_NEARLINE="$REPORTDIR/nycmg_on_nearline.txt"
NYCMG_NEARLINE_STAT="$REPORTDIR/nycmg_on_nearline_stat.txt"
NYCMG_NEARLINE_BY_SIZE="$REPORTDIR/nycmg_on_nearline_by_filesize.csv"
NYCMG_REMOVAL_CANDIDATES="$REPORTDIR/nycmg_omneon_removal_candidates.txt"
NYCMG_REMOVAL_CANDIDATES_NEARLINE="$REPORTDIR/nycmg_omneon_removal_candidates_already_on_nearline.txt"
NYCMG_REMOVAL_CANDIDATES_NOT_NEARLINE="$REPORTDIR/nycmg_omneon_removal_candidates_not_on_nearline.txt"
CUNYTV_NEARLINE="$REPORTDIR/cunytv_on_nearline.txt"
CUNYTV_NEARLINE_STAT="$REPORTDIR/cunytv_on_nearline_stat.txt"
CUNYTV_REMOVAL_CANDIDATES="$REPORTDIR/cunytv_omneon_removal_candidates.txt"
CUNYTV_REMOVAL_CANDIDATES_NEARLINE="$REPORTDIR/cunytv_omneon_removal_candidates_already_on_nearline.txt"
CUNYTV_REMOVAL_CANDIDATES_NOT_NEARLINE="$REPORTDIR/cunytv_omneon_removal_candidates_not_on_nearline.txt"
CUNYTV_TO_RESTORE="$REPORTDIR/cunytv_to_recall.txt"
NYCMG_TO_RESTORE="$REPORTDIR/nycmg_to_recall.txt"
CUNYTV_TO_RESTORE_FROM_LTO="$REPORTDIR/cunytv_to_recall_from_lto.txt"
NYCMG_TO_RESTORE_FROM_LTO="$REPORTDIR/nycmg_to_recall_from_lto.txt"
CUNYTV_TO_RESTORE_FROM_LTO_DETAIL="$REPORTDIR/cunytv_to_recall_from_lto_detail.txt"
NYCMG_TO_RESTORE_FROM_LTO_DETAIL="$REPORTDIR/nycmg_to_recall_from_lto_detail.txt"
BAD_FILENAMES="$REPORTDIR/bad_filenames.txt"
NYCMG_EXPIRED_IDS="$REPORTDIR/nycmg_expired_all.txt"
NYCMG_EXPIRED_IDS_ONLINE="$REPORTDIR/nycmg_expired_online.csv"

# set up reporting directories
mkdir -p "$REPORTDIR"
mkdir -p "${NYCMG_ABOUT_TO_RUN_DIR}"

### REPORT ON MEDIAIDS IN UPCOMING AIR
# get CUNYTV mediaids that are needed for air
cat "$CUNYTV_TOAIRALL" "$CUNYTV_TOAIR" | tr "\r" "\n" | awk '{print $1}' | sort -u  | grep -v "^$" > "$CUNYTV4AIR"
report -d "Total files loaded to air on CUNYTV: $(cat "${CUNYTV4AIR}" | wc -l)"
# grab and process about to runs for NYCMG
for abouttorun in "${abouttoruns[@]}" ; do
    if [[ -f "${abouttorun}" ]] ; then
        cp "${abouttorun}" "${NYCMG_ABOUT_TO_RUN_DIR}/"
    else
        report -w "WARNING ${abouttorun} is expected but is not found."
    fi
done
# get NYCMG mediaids that are needed for air
for xml in `find "${NYCMG_ABOUT_TO_RUN_DIR}" -type f -iname "*.xml"` ; do
    sed -n -e 's/.*<mediaid>\([^<]*\)<\/mediaid>.*/\1/p' "$xml" | grep -v "^$" | sort -u >> "${NYCMG4AIR}"
    mv "${NYCMG4AIR}" "${NYCMG4AIR}x"
    sort -u "${NYCMG4AIR}x" > "${NYCMG4AIR}"
    report -d "Mediaid count for $(basename "$xml"): $(sed -n -e 's/.*<mediaid>\([^<]*\)<\/mediaid>.*/\1/p' "$xml" | grep -v "^$" | sort -u | wc -l)"
done
report -d "Total files loaded to air on NYCMG: $(cat "${NYCMG4AIR}" | wc -l)"

### REPORT ON PROTRACK REGISTERED MEDIAIDS
# list all NYCMG ProTrack IDs (Programs and Filler)
# 'T-' and '/1' are temporary prefixes and suffixes of NYCMG mediaids and are removed when filematching
cat "$NYCMG_MEDIAID_CSV" | tr "\r" "\n" | cut -d, -f1 | sed 's/T-//' | sed 's|/1||' | sort -u > "$IDS_NYCMG"
report -d "Total known NYCMG mediaids: $(cat "$IDS_NYCMG" | wc -l)"
cat "$NYCMG_MEDIAID_CSV" | tr "\r" "\n" | grep "F,$" | cut -d, -f1 | sort -u > "$NYCMG_FILLER_IDS"
report -d "Total known NYCMG mediaids (interstitials): $(cat "$NYCMG_FILLER_IDS" | wc -l)"
# list all CUNYTV ProTrack IDs (Programs, Segments, and Filler)
cat "$CUNY_FILLERS" "$CUNY_PROGRAMS" "$CUNY_SEGMENTS" | tr "\r" "\n" | awk '{print $1}' | sort -u > "$IDS_CUNYTV"
report -d "Total known CUNYTV mediaids: $(cat "$IDS_CUNYTV"| wc -l)"
cat "$CUNY_FILLERS" | tr "\r" "\n" | awk '{print $1}' | sort -u | grep -v "^$" > "$CUNYTV_FILLER_IDS"
report -d "Total known CUNYTV mediaids (interstitials): $(cat "$CUNYTV_FILLER_IDS" | wc -l)"
# list all ProTrack IDs, both systems
cat "$IDS_NYCMG" "$IDS_CUNYTV" | sort -u > "$IDS_BOTH"


### REPORT ON OMNEON FILES
# list all Omneon files
stat -F -l -t '%FT%T' "$OMNEON_PATH/"* | grep -v "/$" | sed 's/*//g' > "$ON_OMNEON_FILES_STAT"
cut -d " " -f 7- "$ON_OMNEON_FILES_STAT" |cut -d/ -f5 | cut -d. -f1 | sort | grep -v "^$" > "$ON_OMNEON_IDS"
report -d "Omneon file count: $(cat "${ON_OMNEON_IDS}" | wc -l)"
awk -v date="$AGED_DATE" '$6 <= date' "$ON_OMNEON_FILES_STAT" | cut -d " " -f 7- |cut -d/ -f5 | cut -d. -f1 | sort | grep -v "^$" > "$ON_OMNEON_IDS_OLD"
report -d "Omneon file count (older than ${keepnewforXdays} days): $(cat "${ON_OMNEON_IDS_OLD}" | wc -l)"
# associate omneon files to custodians
comm -1 -2 "$ON_OMNEON_IDS_OLD" "$IDS_NYCMG" > "$NYCMG_ON_OMNEON"
report -d "Omneon file count (nycmg): $(cat "${NYCMG_ON_OMNEON}" | wc -l)"
comm -1 -2 "$ON_OMNEON_IDS_OLD" "$IDS_CUNYTV" > "$CUNYTV_ON_OMNEON"
report -d "Omneon file count (cunytv): $(cat "${CUNYTV_ON_OMNEON}" | wc -l)"
comm -2 -3 "$ON_OMNEON_IDS" "$IDS_BOTH" > "$ORPHANS"
report -d "Omneon file count (orphans): $(cat "${ORPHANS}" | wc -l)"

comm -1 -2 "$IDS_NYCMG" "$IDS_CUNYTV" | sort -u > "${CONFLICTS}"
cat "${ON_OMNEON_FILES_STAT}" | grep -v "/clip.dir/[A-Z0-9][A-Z0-9-_]\+\(.mov\|.mxf\)$" | cut -d " " -f 7- | cut -d/ -f 5- > "${BAD_FILENAMES}"
if [ -s "${BAD_FILENAMES}" ] ; then
    report -w "Known bad file names: $(cat "${BAD_FILENAMES}" | wc -l)"
fi
if [ -s "${CONFLICTS}" ] ; then
    report -w "Known mediaids conflicts: $(cat "${CONFLICTS}" | wc -l)"
fi

### REPORT ON NEARLINE FILES
# find what is on nearline - nycmg
stat -F -l -t '%FT%T' "$NYCMG_NEARLINE_PATH/"* | grep -v "/$" | sed 's:*::g' > "$NYCMG_NEARLINE_STAT"
cut -d " " -f 7- "$NYCMG_NEARLINE_STAT" | cut -d/ -f4 | cut -d. -f1 | sort | grep -v "^$" > "$NYCMG_NEARLINE"
report -d "Nearline file count (nycmg): $(cat "${NYCMG_NEARLINE}" | wc -l)"
# find what is on nearline - cunytv
find "${CUNYTV_DIGACQ_PATH}"/*/objects/service -name "*.mov" -exec stat -F -l -t '%FT%T' "{}" \; > "$CUNYTV_NEARLINE_STAT"
cut -d " " -f 7- "$CUNYTV_NEARLINE_STAT" | cut -d/ -f8 | cut -d. -f1 | sort | grep -v "^$" > "$CUNYTV_NEARLINE"
report -d "Nearline file count (cunytv): $(cat "${CUNYTV_NEARLINE}" | wc -l)"

# LTO reports
cat ~/Documents/C0* | grep "^/Volumes/" > "/$REPORTDIR/nycmg_files_on_long_term_storage.txt"
cat ~/Documents/A00* | grep ^/Volumes | cut -d/ -f4- | cut -d. -f1 | tr '/' '\n' | sort | uniq > "$REPORTDIR/cunytv_lto_ids.txt"

# find NYCMG removal candidates
comm -2 -3 "$NYCMG_ON_OMNEON" "$NYCMG_FILLER_IDS" > "$NYCMG_ON_OMNEON_NOT_FILLER"
comm -2 -3 "$NYCMG_ON_OMNEON_NOT_FILLER" "$NYCMG4AIR" > "$NYCMG_REMOVAL_CANDIDATES"
comm -1 -2 "$NYCMG_NEARLINE" "$NYCMG_REMOVAL_CANDIDATES" > "$NYCMG_REMOVAL_CANDIDATES_NEARLINE"
comm -1 -3 "$NYCMG_NEARLINE" "$NYCMG_REMOVAL_CANDIDATES" > "$NYCMG_REMOVAL_CANDIDATES_NOT_NEARLINE"

for i in `cat "$NYCMG_REMOVAL_CANDIDATES_NEARLINE"` ; do grep "/${i}\." "$ON_OMNEON_FILES_STAT" | awk '{print $7 " " $5}' | sed 's:/Volumes/fs0/clip.dir/::g' ; done  > "/$REPORTDIR/nycmg_removal_candidates_on_omneon_with_extension_and_size.txt"
for i in `cat "$NYCMG_REMOVAL_CANDIDATES_NEARLINE"` ; do grep "/${i}\." "$NYCMG_NEARLINE_STAT" | awk '{print $7 " " $5}' | sed 's:/Volumes/NYCM_Media/::g' ; done > "/$REPORTDIR/nycmg_removal_candidates_on_nearline_with_extension_and_size.txt"
diff -y "/$REPORTDIR/nycmg_removal_candidates_on_omneon_with_extension_and_size.txt" "$REPORTDIR/nycmg_removal_candidates_on_nearline_with_extension_and_size.txt" | grep -v "|" | grep -v "<" | grep -v ">" | awk '{print $1}' | cut -d " " -f2 > "$REPORTDIR/nycmg_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt"

# find CUNYTV removal candidates
comm -2 -3 "$CUNYTV_ON_OMNEON" "$CUNYTV_FILLER_IDS" > "$CUNYTV_ON_OMNEON_NOT_FILLER"
comm -2 -3 "$CUNYTV_ON_OMNEON_NOT_FILLER" "$CUNYTV4AIR" > "$CUNYTV_REMOVAL_CANDIDATES"
comm -1 -2 "$CUNYTV_NEARLINE" "$CUNYTV_REMOVAL_CANDIDATES" > "$CUNYTV_REMOVAL_CANDIDATES_NEARLINE"
comm -1 -3 "$CUNYTV_NEARLINE" "$CUNYTV_REMOVAL_CANDIDATES" > "$CUNYTV_REMOVAL_CANDIDATES_NOT_NEARLINE"

for i in `cat "$CUNYTV_REMOVAL_CANDIDATES_NEARLINE"` ; do grep "/${i}\." "$ON_OMNEON_FILES_STAT" | awk '{print $7 " " $5}' | sed 's:/Volumes/fs0/clip.dir/::g' ; done  > "/$REPORTDIR/cunytv_removal_candidates_on_omneon_with_extension_and_size.txt"
for i in `cat "$CUNYTV_REMOVAL_CANDIDATES_NEARLINE"` ; do grep "/${i}\." "$CUNYTV_NEARLINE_STAT" | awk '{print $7 " " $5}' | cut -d/ -f8- | sed 's/*//' ; done > "/$REPORTDIR/cunytv_removal_candidates_on_nearline_with_extension_and_size.txt"
diff -y "/$REPORTDIR/cunytv_removal_candidates_on_omneon_with_extension_and_size.txt" "$REPORTDIR/cunytv_removal_candidates_on_nearline_with_extension_and_size.txt" | grep -v "|" | grep -v "<" | grep -v ">" | awk '{print $1}' | cut -d " " -f2 > "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt"
for i in $(comm -1 -2 "$CUNYTV_REMOVAL_CANDIDATES" "$REPORTDIR/cunytv_lto_ids.txt") ; do grep "${i}.m" "${ON_OMNEON_FILES_STAT}" ; done | cut -d " " -f7 | sed 's:${OMNEON_PATH}::g'> "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_lto_index.txt"

# recall list
comm -2 -3 "${CUNYTV4AIR}" "${CUNYTV_ON_OMNEON}" > "${CUNYTV_TO_RESTORE}"
comm -1 -2 "${CUNYTV_TO_RESTORE}" "$REPORTDIR/cunytv_lto_ids.txt" > "${CUNYTV_TO_RESTORE_FROM_LTO}"
while read i ; do grep -h "${i}[^_]" ~/Documents/A00*.txt ; done < "${CUNYTV_TO_RESTORE_FROM_LTO}" | grep -v "metadata" | grep -v "objects" | grep -v "txt$" | sort > "${CUNYTV_TO_RESTORE_FROM_LTO_DETAIL}" 

echo
report -d "Omneon status information:"
df -h "${OMNEON_PATH}"
report -d "Storage reports have been written to: ${REPORTDIR} to open run:"
echo
report -d "  open ${REPORTDIR}"
echo
if [[ -s "${CONFLICTS}" ]] ; then
report -w "Please note these mediaid conflicts: $(cat "${CONFLICTS}" | xargs)"
echo
fi
if [[ -s "${BAD_FILENAMES}" ]] ; then
report -w "Please note these bad filenames:"
cat "${BAD_FILENAMES}"
echo
fi
if [[ $(cat "${ORPHANS}") ]] ; then
report -d "Please note there are $(cat "${ORPHANS}" | wc -l) orphans, to see them run:"
report -w "  cat ${ORPHANS}"
echo
fi
if [[ $(cat "$REPORTDIR/nycmg_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt" | grep -v BBC) ]] ; then
    echo
    report -d "Candidate files to remove = $(pushd "${OMNEON_PATH}" >> /dev/null && du -sch $(cat "$REPORTDIR/nycmg_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt" | xargs) | tail -n1 | awk '{print $1}' && popd>> /dev/null)"
    report -d "To remove nycmg files that are not new, not filler, not about-to-air, that are already on nearline run:"
    echo
    report -w "  pushd "${OMNEON_PATH}" && rm -i $(cat "$REPORTDIR/nycmg_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt" | grep -v BBC | xargs) && popd"
    echo
fi
if [[ $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt") ]] ; then
    echo
    report -d "Candidate files to remove = $(pushd "${OMNEON_PATH}" >> /dev/null && du -sch $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt" | xargs) | tail -n1 | awk '{print $1}' && popd>> /dev/null)"
    report -d "To remove cunytv files that are not new, not filler, not about-to-air, that are already on nearline run:"
    echo
    report -w "  pushd "${OMNEON_PATH}" && rm -i $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_extension_and_size.txt" | xargs) && popd"
    echo
fi
if [[ $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_lto_index.txt") ]] ; then
    echo
    report -d "Candidate files to remove = $(du -sch $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_lto_index.txt" | xargs) | tail -n1 | awk '{print $1}')"
    report -d "To remove cunytv files that are not new, not filler, not about-to-air, that are already on LTO tape run:"
    echo
    report -w "  rm -i $(cat "$REPORTDIR/cunytv_removal_candidates_save_to_remove_from_omneon_based_on_lto_index.txt" | xargs)"
    echo
fi

echo -n "" > "${ORPHANPATHS}"
while read orphan ; do
    grep "clip.dir/${orphan}.m" "${ON_OMNEON_FILES_STAT}" | cut -d " " -f 7- >> "${ORPHANPATHS}"
done < "${ORPHANS}"


echo "filename,recport,recdate,recname" > "$ORPHANSDETAIL"
while read orphanpath ; do
    omdata=$(head -c 10000 "${orphanpath}" | strings | grep clip.dir | head -n 1)
    recport=$(echo "$omdata" | cut -d";" -f2)
    recdate=$(echo "$omdata" | cut -d";" -f9)
    recname=$(echo "$omdata" | cut -d";" -f6)
    if [[ "${orphanpath}" == "${recname}" ]] ;then
        recname=""
    fi
    echo "${orphanpath},${recport},${recdate},${recname}" >> "${ORPHANSDETAIL}"
done < "${ORPHANPATHS}"
cat "$NYCMG_MEDIAID_CSV" | awk -F "," '{print $1 "," $(NF-2) }' | sed 's/T-//' | sed 's|/1||' | sed 's/.........$//' | sort -t, -k2 -r | sort -t, -u -k1,1 | sort -t, -k2 | awk -v d=$(date "+%F") -F, '$2 < d' > "${NYCMG_EXPIRED_IDS}"
for i in `cat "${NYCMG_NEARLINE}" "${NYCMG_ON_OMNEON}" | sort -u` ; do grep "^${i}," "${NYCMG_EXPIRED_IDS}" ; done > "${NYCMG_EXPIRED_IDS_ONLINE}"
awk '{print $7 "," $5}' /Users/archivesx/Desktop/REPORTS/2014-07-01/nycmg_on_nearline_stat.txt | awk -F/ '{print $NF}' | sort -t, -k 2,2 -n > "${NYCMG_NEARLINE_BY_SIZE}"

