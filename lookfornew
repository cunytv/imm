#!/bin/bash
# This script sends an email when a new file is dropped off in the To Library folder. A cron job is set up to read the folder every 10 minutes. To edit the cron job, type crontab -e in the Terminal. 
searchdirectory="$1"
timefile=$HOME/.timefile_$(basename "${searchdirectory}")

_get_broadcastduration(){
    BROADCASTDURATION=$(mediainfo --inform="General;%Duration_String4%" "${1}")
}
_get_filesize(){
    FILESIZE=$(ls -hl "${1}" | awk '{print $5}')
}
_get_user(){
    USER=$(ls -hl "${1}" | awk '{print $3}')
}
_get_framerate(){
    FRAMERATE="$(mediainfo --inform="Video;%FrameRate%" "${1}")"
}
_get_framesize(){
    WIDTH=$(mediainfo --inform="Video;%Width%" "${1}")
    HEIGHT=$(mediainfo --inform="Video;%Height%" "${1}")
}
_get_codec(){
    CODEC=$(mediainfo --inform="Video;%Format% %Format_Version% %Format_Profile% %Format_Commercial_IfAny% (%CodecID%)" "${1}")
}

_get_chapterlist(){
    CHAPTER_LIST="$(ffprobe -sexagesimal -v 0 "${1}" -show_entries chapter=id,start_time,end_time:chapter_tags=title -of compact=p=0:nk=1)"
}

if [ ! -f "${timefile}" ] ; then 
    filelist=$(find "${searchdirectory}" -type f ! -name .DS_Store)
else
    filelist=$(find "${searchdirectory}" -cnewer "${timefile}" ! -newermt '-20 seconds' -type f ! -name .DS_Store)
fi
touch -t "$(date -v -20S "+%Y%m%d%H%M.%S")" "${timefile}"

message="These new video files showed up in $(basename "${searchdirectory}"):\n\n"

if [ -n "${filelist}" ] ; then
     BOUNDARY="unique-boundary-$RANDOM"
     while read file ; do
         file_ascii="$(echo "${file}" | iconv -f utf-8 -t ascii//TRANSLIT)"
        _get_broadcastduration "$file"
        _get_filesize "$file"
        _get_codec "$file"
        _get_framerate "$file"
        _get_framesize "$file"
        _get_user "$file"
        _get_chapterlist "$file"
        message+="*********\n"
        message+="Filename: ${file}\n"
        if [ -n "${BROADCASTDURATION}" ] ; then
            message+="Duration: $BROADCASTDURATION\n"
            if [ -n "${FILESIZE}" ] ; then
                message+="Size: $FILESIZE\n"
            fi
            if [ -n "${CODEC}" ] ; then
                message+="Codec: $CODEC\n"
            fi
            if [ -n "${FRAMERATE}" ] ; then
                message+="Framerate: $FRAMERATE fps\n"
            fi
            if [ -n "${WIDTH}" ] ; then
                message+="Frame size: $WIDTH x $HEIGHT pixels\n"
            fi
            if [ -n "${USER}" ] ; then
                message+="User: $USER\n\n\n"
            fi
            if [ -n "${CHAPTER_LIST}" ] ; then
                message+="\nChapters:\n${CHAPTER_LIST}\n\n\n"
            fi
            if [ -n "${BROADCASTDURATION}" ] ; then
                makegifsummary -o /tmp "$file"
                gifpath="/tmp/$(basename "${file%.*}").gif"
                gifpath_ascii="/tmp/$(basename "${file_ascii%.*}").gif"
                mv "${gifpath}" "${gifpath_ascii}"
                if [ -f "${gifpath_ascii}" ] ; then
                    ATT_MIMETYPE=$(file -Ib "${gifpath_ascii}" | cut -d";" -f1)
                    ATT_ENCODED=$(base64 < "${gifpath_ascii}")
                    message+="--$BOUNDARY\n"
                    message+="Content-Type: $ATT_MIMETYPE; name="$(basename "${gifpath_ascii}")"\n"
                    message+="Content-Transfer-Encoding: base64\n"
                    message+="Content-Disposition: attachment; filename="$(basename "${gifpath_ascii}")"\n"
                    message+="\n"
                    message+="$ATT_ENCODED"
                    message+="\n\n"
                    message+="--$BOUNDARY"
                    message+="\n"
                    echo "cleaning up gif"
                    rm -v "${gifpath_ascii}"
                fi
            fi
            message+="\n"
        fi
    done < <(echo "${filelist}")

    cat <<EOF | sendmail -f "library@tv.cuny.edu" -F "Library Bot" "david.rice@tv.cuny.edu; catriona.schlosser@tv.cuny.edu; amy.monte@tv.cuny.edu; anne.murphy@tv.cuny.edu; oksana.israilova@tv.cuny.edu"
MIME-Version: 1.0
From: "Library Bot" <library@tv.cuny.edu>
To: "Amy, Annie, Catriona, Dave, and Oksana" <amy.monte.anne.murphy.catriona.schlosser.david.rice.oksana.israilova@tv.cuny.edu>
Subject: [New Files on $(basename "${searchdirectory}")]
Content-Type: multipart/mixed; boundary="$BOUNDARY"

--$BOUNDARY
Content-Type: text/plain
Content-Disposition: inline

$(echo -e "${message}")


Enjoy!



--$BOUNDARY--

EOF
fi
